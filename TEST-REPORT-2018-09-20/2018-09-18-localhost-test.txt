TAP version 13
# Tests up and running

--- Testing Each Experiment Result


# --- name: anova
ok 1 algorithms: [{"validation":false,"code":"anova","name":"anova","parameters":[]}]
ok 2 should have created date: Tue Sep 18 2018 17:21:19 GMT+0200 (CEST)
ok 3 should have name: anova
ok 4 resultsViewed: false
ok 5 should have uuid: eb4ce098-be28-4aed-b478-8edf9bc65d28
ok 6 should have modelDefinitionId: regression21
ok 7 should have user fullname: anonymous
ok 8 should have user.username
ok 9 should have experiment.modelDefinition: {"id":25,"variables":[{"code":"lefthippocampus"}],"covariables":[{"code":"alzheimerbroadcategory"}],"grouping":[],"trainingDatasets":[{"code":"qqni-synthdata"},{"code":"nida-synthdata"}],"testingDatasets":[],"validationDatasets":[{"code":"desd-synthdata"}],"filters":""}
ok 10 should have node.name: node2
ok 11 should have node.methods: 1
ok 12 should have method.mime: application/json
ok 13 should have method.algorithm: python-anova
ok 14 should have method.data or method.error
ok 15 node.methods.length should be equal to experiment.algorithms.length: 1 === 1
ok 16 method.data: {"C(alzheimerbroadca
ok 17 method.data should be an array
ok 18 should have Object.keys(data[].d)


# --- name: histograms
ok 19 algorithms: [{"validation":false,"code":"histograms","name":"histograms","parameters":[]}]
ok 20 should have created date: Tue Sep 18 2018 17:17:08 GMT+0200 (CEST)
ok 21 should have name: histograms
ok 22 resultsViewed: false
ok 23 should have uuid: 2c9547e9-1781-419c-92e7-76603d01ceb6
ok 24 should have modelDefinitionId: regression20
ok 25 should have user fullname: anonymous
ok 26 should have user.username
ok 27 should have experiment.modelDefinition: {"id":28,"variables":[{"code":"subjectageyears"}],"covariables":[{"code":"lefthippocampus"},{"code":"righthippocampus"}],"grouping":[],"trainingDatasets":[{"code":"qqni-synthdata"},{"code":"nida-synthdata"}],"testingDatasets":[],"validationDatasets":[{"code":"desd-synthdata"}],"filters":""}
#### ERROR ####
ok 28 Error: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "pk_job_result" Detail: Key (job_id, shape, result_name, node)=(ae5b5cdd-3c35-4ab7-a47a-da7acb2a7a39, application/vnd.highcharts+json, , node2) already exists.


# --- name: linearRegression
ok 29 algorithms: [{"validation":false,"code":"linearRegression","name":"linearRegression","parameters":[]}]
ok 30 should have created date: Tue Sep 18 2018 17:17:48 GMT+0200 (CEST)
ok 31 should have name: linearRegression
ok 32 resultsViewed: false
ok 33 should have uuid: ea371231-3375-4fb8-87bd-f03ee21b3075
ok 34 should have modelDefinitionId: regression20
ok 35 should have user fullname: anonymous
ok 36 should have user.username
ok 37 should have experiment.modelDefinition: {"id":28,"variables":[{"code":"subjectageyears"}],"covariables":[{"code":"lefthippocampus"},{"code":"righthippocampus"}],"grouping":[],"trainingDatasets":[{"code":"qqni-synthdata"},{"code":"nida-synthdata"}],"testingDatasets":[],"validationDatasets":[{"code":"desd-synthdata"}],"filters":""}
#### ERROR ####
ok 38 Error: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "pk_job_result" Detail: Key (job_id, shape, result_name, node)=(e0131999-fc52-47bb-b93a-45f7a41beb45, application/json, , node2) already exists.


# --- name: sgdLinearModel
ok 39 algorithms: [{"validation":true,"code":"sgdLinearModel","name":"sgdLinearModel","parameters":[{"code":"alpha","value":"0.0001"},{"code":"penalty","value":"l2"},{"code":"l1_ratio","value":"0.15"}]}]
ok 40 should have created date: Tue Sep 18 2018 17:18:28 GMT+0200 (CEST)
ok 41 should have name: sgdLinearModel
ok 42 resultsViewed: false
ok 43 should have uuid: 181f5c38-9d79-4c24-bb65-6b2c7b76a9ae
ok 44 should have modelDefinitionId: regression20
ok 45 should have user fullname: anonymous
ok 46 should have user.username
ok 47 should have experiment.modelDefinition: {"id":28,"variables":[{"code":"subjectageyears"}],"covariables":[{"code":"lefthippocampus"},{"code":"righthippocampus"}],"grouping":[],"trainingDatasets":[{"code":"qqni-synthdata"},{"code":"nida-synthdata"}],"testingDatasets":[],"validationDatasets":[{"code":"desd-synthdata"}],"filters":""}
ok 48 should have node.name: node2
ok 49 should have node.methods: 1
ok 50 should have method.mime: application/pfa+json
ok 51 should have method.algorithm: python-sgd-linear-model
ok 52 should have method.data or method.error
ok 53 node.methods.length should be equal to experiment.algorithms.length: 1 === 1
ok 54 method.data: {"crossValidation":{
ok 55 method.data should be an array
ok 56 should have data.crossValidation or data.remoteValidation
ok 57 should have crossValidation keys: explainedVariance,mae,mse,rmse,rsquared,type


# --- name: naiveBayes
ok 58 algorithms: [{"validation":true,"code":"naiveBayes","name":"naiveBayes","parameters":[{"code":"alpha","value":"1"},{"code":"class_prior","value":""}]}]
ok 59 should have created date: Tue Sep 18 2018 17:19:29 GMT+0200 (CEST)
ok 60 should have name: naiveBayes
ok 61 resultsViewed: false
ok 62 should have uuid: 73fee87f-4116-4871-86c1-e5a08a163892
ok 63 should have modelDefinitionId: classification20
ok 64 should have user fullname: anonymous
ok 65 should have user.username
ok 66 should have experiment.modelDefinition: {"id":26,"variables":[{"code":"alzheimerbroadcategory"}],"covariables":[{"code":"lefthippocampus"}],"grouping":[],"trainingDatasets":[{"code":"qqni-synthdata"},{"code":"nida-synthdata"}],"testingDatasets":[],"validationDatasets":[{"code":"desd-synthdata"}],"filters":""}
ok 67 should have node.name: federation
ok 68 should have node.methods: 2
ok 69 should have method.mime: text/plain+error
ok 70 should have method.algorithm: dispatch
ok 71 should have method.data or method.error
#### ERROR #### text/plain+error
# Error: : variance less than or equal to zero in model.naive.gaussian (#10001) at PrettyPFA line 37 (PFA field \"action -> 2 -> let -> gaussianLL -> a.map -> 1 -> do -> 0\")","jobId":"2eee5437-f154-4fb2-9e0d-95f594808dd9","node":"node2","type":"text/plain+error"})
ok 72 should have method.mime: text/plain+error
ok 73 should have method.algorithm: dispatch
ok 74 should have method.data or method.error
#### ERROR #### text/plain+error
# Error: : variance less than or equal to zero in model.naive.gaussian (#10001) at PrettyPFA line 37 (PFA field \"action -> 2 -> let -> gaussianLL -> a.map -> 1 -> do -> 0\")","jobId":"3eab8c0d-c3d1-40f0-b6be-da3df1996900","node":"node3","type":"text/plain+error"})


# --- name: sgdNeuralNetwork
ok 75 algorithms: [{"validation":true,"code":"sgdNeuralNetwork","name":"sgdNeuralNetwork","parameters":[{"code":"hidden_layer_sizes","value":"100"},{"code":"activation","value":"relu"},{"code":"alpha","value":"0.0001"},{"code":"learning_rate_init","value":"0.001"}]}]
ok 76 should have created date: Tue Sep 18 2018 17:20:09 GMT+0200 (CEST)
ok 77 should have name: sgdNeuralNetwork
ok 78 resultsViewed: false
ok 79 should have uuid: c34348d7-b618-4109-9905-c73b30773529
ok 80 should have modelDefinitionId: classification20
ok 81 should have user fullname: anonymous
ok 82 should have user.username
ok 83 should have experiment.modelDefinition: {"id":26,"variables":[{"code":"alzheimerbroadcategory"}],"covariables":[{"code":"lefthippocampus"}],"grouping":[],"trainingDatasets":[{"code":"qqni-synthdata"},{"code":"nida-synthdata"}],"testingDatasets":[],"validationDatasets":[{"code":"desd-synthdata"}],"filters":""}
ok 84 should have node.name: node2
ok 85 should have node.methods: 1
ok 86 should have method.mime: application/pfa+json
ok 87 should have method.algorithm: python-sgd-neural-network
ok 88 should have method.data or method.error
ok 89 node.methods.length should be equal to experiment.algorithms.length: 1 === 1
ok 90 method.data: {"crossValidation":{
ok 91 method.data should be an array
ok 92 should have data.crossValidation or data.remoteValidation
ok 93 should have crossValidation keys: explainedVariance,mae,mse,rmse,rsquared,type


# --- name: gradientBoosting
ok 94 algorithms: [{"validation":true,"code":"gradientBoosting","name":"gradientBoosting","parameters":[{"code":"learning_rate","value":"0.1"},{"code":"n_estimators","value":"100"},{"code":"max_depth","value":"3"},{"code":"min_samples_split","value":"2"},{"code":"min_samples_leaf","value":"1"},{"code":"min_weight_fraction_leaf","value":"0"},{"code":"min_impurity_decrease","value":"0"}]}]
ok 95 should have created date: Tue Sep 18 2018 17:20:49 GMT+0200 (CEST)
ok 96 should have name: gradientBoosting
ok 97 resultsViewed: false
ok 98 should have uuid: bbf6fd45-a254-4ff2-8ede-5cc49d0d46d0
ok 99 should have modelDefinitionId: classification20
ok 100 should have user fullname: anonymous
ok 101 should have user.username
ok 102 should have experiment.modelDefinition: {"id":26,"variables":[{"code":"alzheimerbroadcategory"}],"covariables":[{"code":"lefthippocampus"}],"grouping":[],"trainingDatasets":[{"code":"qqni-synthdata"},{"code":"nida-synthdata"}],"testingDatasets":[],"validationDatasets":[{"code":"desd-synthdata"}],"filters":""}
ok 103 should have node.name: federation
ok 104 should have node.methods: 2
ok 105 should have method.mime: text/plain+error
ok 106 should have method.algorithm: dispatch
ok 107 should have method.data or method.error
#### ERROR #### text/plain+error
# Error: ":"qqni-synthdata"},{"code":"nida-synthdata"}],"targetTable":"cde_features_mixed","user":{"code":"anonymous"}},"error":"java.lang.Exception: No fold results received","jobId":"0e6bbb4d-62dc-4e40-97fa-1ea15de4ff05","node":"node2","type":"text/plain+error"})
ok 108 should have method.mime: text/plain+error
ok 109 should have method.algorithm: dispatch
ok 110 should have method.data or method.error
#### ERROR #### text/plain+error
# Error: ":"qqni-synthdata"},{"code":"nida-synthdata"}],"targetTable":"cde_features_mixed","user":{"code":"anonymous"}},"error":"java.lang.Exception: No fold results received","jobId":"c0b59fe2-5d75-4b34-bf5b-5a992d758937","node":"node3","type":"text/plain+error"})


# --- name: knn
ok 111 algorithms: [{"validation":true,"code":"knn","name":"knn","parameters":[{"code":"k","value":"5"}]}]
ok 112 should have created date: Tue Sep 18 2018 17:21:49 GMT+0200 (CEST)
ok 113 should have name: knn
ok 114 resultsViewed: false
ok 115 should have uuid: bf9e82c2-d45c-4341-8d21-82e5ef787a65
ok 116 should have modelDefinitionId: classification20
ok 117 should have user fullname: anonymous
ok 118 should have user.username
ok 119 should have experiment.modelDefinition: {"id":26,"variables":[{"code":"alzheimerbroadcategory"}],"covariables":[{"code":"lefthippocampus"}],"grouping":[],"trainingDatasets":[{"code":"qqni-synthdata"},{"code":"nida-synthdata"}],"testingDatasets":[],"validationDatasets":[{"code":"desd-synthdata"}],"filters":""}
#### ERROR ####
ok 120 Error: java.lang.IllegalStateException: Substream Source cannot be materialized more than once


# --- name: correlationHeatmap
ok 121 algorithms: [{"validation":false,"code":"correlationHeatmap","name":"correlationHeatmap","parameters":[]}]
ok 122 should have created date: Tue Sep 18 2018 17:22:40 GMT+0200 (CEST)
ok 123 should have name: correlationHeatmap
ok 124 resultsViewed: false
ok 125 should have uuid: 6792b16d-ec28-4bf4-9a8f-bac2beafb319
ok 126 should have modelDefinitionId: regression20
ok 127 should have user fullname: anonymous
ok 128 should have user.username
ok 129 should have experiment.modelDefinition: {"id":28,"variables":[{"code":"subjectageyears"}],"covariables":[{"code":"lefthippocampus"},{"code":"righthippocampus"}],"grouping":[],"trainingDatasets":[{"code":"qqni-synthdata"},{"code":"nida-synthdata"}],"testingDatasets":[],"validationDatasets":[{"code":"desd-synthdata"}],"filters":""}
ok 130 should have node.name: node2
ok 131 should have node.methods: 1
ok 132 should have method.mime: application/vnd.plotly.v1+json
ok 133 should have method.algorithm: python-correlation-heatmap
ok 134 should have method.data or method.error
ok 135 node.methods.length should be equal to experiment.algorithms.length: 1 === 1
ok 136 method.data: {"data":{"timestamp"
ok 137 method.data should be an array
ok 138 should have method.data[].d.data


# --- name: pca
ok 139 algorithms: [{"validation":false,"code":"pca","name":"pca","parameters":[]}]
ok 140 should have created date: Tue Sep 18 2018 17:22:50 GMT+0200 (CEST)
ok 141 should have name: pca
ok 142 resultsViewed: false
ok 143 should have uuid: f3e2352a-bf18-4aca-8f5a-c917314e77e2
ok 144 should have modelDefinitionId: regression20
ok 145 should have user fullname: anonymous
ok 146 should have user.username
ok 147 should have experiment.modelDefinition: {"id":28,"variables":[{"code":"subjectageyears"}],"covariables":[{"code":"lefthippocampus"},{"code":"righthippocampus"}],"grouping":[],"trainingDatasets":[{"code":"qqni-synthdata"},{"code":"nida-synthdata"}],"testingDatasets":[],"validationDatasets":[{"code":"desd-synthdata"}],"filters":""}
#### ERROR ####
ok 148 Error: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "pk_job_result" Detail: Key (job_id, shape, result_name, node)=(6a2e8d4b-7995-48d5-b66a-42388393a9b0, application/json, , node2) already exists.


# --- name: hedwig
ok 149 algorithms: [{"validation":false,"code":"hedwig","name":"hedwig","parameters":[{"code":"beam","value":"10"},{"code":"support","value":"0.1"}]}]
ok 150 should have created date: Tue Sep 18 2018 17:23:10 GMT+0200 (CEST)
ok 151 should have name: hedwig
ok 152 resultsViewed: false
ok 153 should have uuid: d9a55b0b-f35c-4e80-bcad-8370749f805a
ok 154 should have modelDefinitionId: classification21
ok 155 should have user fullname: anonymous
ok 156 should have user.username
ok 157 should have experiment.modelDefinition: {"id":27,"variables":[{"code":"alzheimerbroadcategory"}],"covariables":[{"code":"apoe4"}],"grouping":[],"trainingDatasets":[{"code":"qqni-synthdata"},{"code":"nida-synthdata"}],"testingDatasets":[],"validationDatasets":[{"code":"desd-synthdata"}],"filters":""}
ok 158 should have node.name: node2
ok 159 should have node.methods: 1
ok 160 should have method.mime: text/plain+error
ok 161 should have method.algorithm: hedwig
ok 162 should have method.data or method.error
#### ERROR #### text/plain+error
# Error: Job 2e7784e1-dc13-4d22-8772-c101f2e509a2 using hbpmip/python-jsi-hedwig:1.0.7 has completed in Chronos, but encountered timeout while waiting for job results.
# Does the algorithm store its results or errors in the output database?


# --- name: hinmine
ok 163 algorithms: [{"validation":false,"code":"hinmine","name":"hinmine","parameters":[{"code":"normalize","value":"true"},{"code":"0.85","value":"0.85"}]}]
ok 164 should have created date: Tue Sep 18 2018 17:24:10 GMT+0200 (CEST)
ok 165 should have name: hinmine
ok 166 resultsViewed: false
ok 167 should have uuid: af56c062-5139-4cd5-af41-cc403b417011
ok 168 should have modelDefinitionId: classification20
ok 169 should have user fullname: anonymous
ok 170 should have user.username
ok 171 should have experiment.modelDefinition: {"id":26,"variables":[{"code":"alzheimerbroadcategory"}],"covariables":[{"code":"lefthippocampus"}],"grouping":[],"trainingDatasets":[{"code":"qqni-synthdata"},{"code":"nida-synthdata"}],"testingDatasets":[],"validationDatasets":[{"code":"desd-synthdata"}],"filters":""}
#### ERROR ####
ok 172 Error: Timeout after 5 mn


# --- name: tSNE-linearRegression
ok 173 algorithms: [{"validation":false,"code":"tSNE","name":"tSNE","parameters":[]},{"validation":false,"code":"linearRegression","name":"linearRegression","parameters":[]}]
ok 174 should have created date: Tue Sep 18 2018 17:29:10 GMT+0200 (CEST)
ok 175 should have name: tSNE-linearRegression
ok 176 resultsViewed: false
ok 177 should have uuid: 7f75ba0e-3ece-4644-8e90-3977fb3810c9
ok 178 should have modelDefinitionId: regression20
ok 179 should have user fullname: anonymous
ok 180 should have user.username
ok 181 should have experiment.modelDefinition: {"id":28,"variables":[{"code":"subjectageyears"}],"covariables":[{"code":"lefthippocampus"},{"code":"righthippocampus"}],"grouping":[],"trainingDatasets":[{"code":"qqni-synthdata"},{"code":"nida-synthdata"}],"testingDatasets":[],"validationDatasets":[{"code":"desd-synthdata"}],"filters":""}
#### ERROR ####
ok 182 Error: Timeout after 5 mn


# --- name: ggparci
ok 183 algorithms: [{"validation":false,"code":"ggparci","name":"ggparci","parameters":[]}]
ok 184 should have created date: Tue Sep 18 2018 17:34:11 GMT+0200 (CEST)
ok 185 should have name: ggparci
ok 186 resultsViewed: false
ok 187 should have uuid: 7b83dbc0-5647-4d50-a529-1b1592a5fe3b
ok 188 should have modelDefinitionId: classification20
ok 189 should have user fullname: anonymous
ok 190 should have user.username
ok 191 should have experiment.modelDefinition: {"id":26,"variables":[{"code":"alzheimerbroadcategory"}],"covariables":[{"code":"lefthippocampus"}],"grouping":[],"trainingDatasets":[{"code":"qqni-synthdata"},{"code":"nida-synthdata"}],"testingDatasets":[],"validationDatasets":[{"code":"desd-synthdata"}],"filters":""}
ok 192 should have node.name: node2
ok 193 should have node.methods: 1
ok 194 should have method.mime: text/plain+error
ok 195 should have method.algorithm: R
ok 196 should have method.data or method.error
#### ERROR #### text/plain+error
# Error: Error in if (min(data_to_plot$value) >= 0 & max(data_to_plot$value) <= : missing value where TRUE/FALSE needed


# --- name: kmeans
ok 197 algorithms: [{"validation":false,"code":"kmeans","name":"kmeans","parameters":[]}]
ok 198 should have created date: Tue Sep 18 2018 17:34:41 GMT+0200 (CEST)
ok 199 should have name: kmeans
ok 200 resultsViewed: false
ok 201 should have uuid: db509b12-5d74-454e-82ba-f1ad0f444215
ok 202 should have modelDefinitionId: regression20
ok 203 should have user fullname: anonymous
ok 204 should have user.username
ok 205 should have experiment.modelDefinition: {"id":28,"variables":[{"code":"subjectageyears"}],"covariables":[{"code":"lefthippocampus"},{"code":"righthippocampus"}],"grouping":[],"trainingDatasets":[{"code":"qqni-synthdata"},{"code":"nida-synthdata"}],"testingDatasets":[],"validationDatasets":[{"code":"desd-synthdata"}],"filters":""}
#### ERROR ####
ok 206 Error: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "pk_job_result" Detail: Key (job_id, shape, result_name, node)=(a543e04a-a59e-462f-baf2-42e9938245dd, application/json, , node2) already exists.


# --- name: heatmaply
ok 207 algorithms: [{"validation+":false,"code":"heatmaply","name":"heatmaply","parameters":[]}]
ok 208 should have created date: Tue Sep 18 2018 17:35:11 GMT+0200 (CEST)
ok 209 should have name: heatmaply
ok 210 resultsViewed: false
ok 211 should have uuid: 589ff55e-353e-4eb8-92ff-3683b9a478e2
ok 212 should have modelDefinitionId: regression20
ok 213 should have user fullname: anonymous
ok 214 should have user.username
ok 215 should have experiment.modelDefinition: {"id":28,"variables":[{"code":"subjectageyears"}],"covariables":[{"code":"lefthippocampus"},{"code":"righthippocampus"}],"grouping":[],"trainingDatasets":[{"code":"qqni-synthdata"},{"code":"nida-synthdata"}],"testingDatasets":[],"validationDatasets":[{"code":"desd-synthdata"}],"filters":""}
#### ERROR ####
ok 216 Error: Timeout after 5 mn



# ----------------------------------------------------------------
# 14 methods on 17 had errors on 44 experiments
# ------------------------------------------------------------


That's all folks

1..216
# tests 216
# pass  216

# ok
